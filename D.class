package premium;

import java.io.ByteArrayOutputStream;

public class D {
  public static boolean a = true;
  
  public static int b(Object paramObject, int paramInt) {
    return (F.b() < 0) ? ((String)paramObject).indexOf(paramInt) : 0;
  }
  
  public static int c() {
    return 0xFF676981 ^ F.e("");
  }
  
  public static char d(Object paramObject, int paramInt) {
    if (C.g() <= 0) {
      paramInt = ((String)paramObject).charAt(paramInt);
      return paramInt;
    } 
    paramInt = 0;
    return paramInt;
  }
  
  public static String e(String paramString) {
    boolean bool = false;
    String str1 = f();
    String str2 = f();
    int i;
    for (i = 0;; i++) {
      if (i >= 15) {
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream(C.c(paramString) / 2);
        for (i = 0;; i += 2) {
          byte[] arrayOfByte;
          if (i >= C.c(paramString)) {
            arrayOfByte = B.g(byteArrayOutputStream);
            i = arrayOfByte.length;
            int j = C.c(str2);
            while (true) {
              if (i <= 0) {
                for (i = bool;; i = C.c(f()) + 1) {
                  if (i >= arrayOfByte.length)
                    return new String(arrayOfByte); 
                } 
                break;
              } 
              arrayOfByte[-1] = (byte)(byte)(arrayOfByte[-1] ^ d(str2, -1 % j));
            } 
            break;
          } 
          A.h(byteArrayOutputStream, b(str1, d(arrayOfByte, i)) << 4 | b(str1, d(arrayOfByte, i + 1)));
        } 
        break;
      } 
      str1 = A.f(A.c(A.c(new StringBuffer(), str1), B.d(i)));
      str2 = A.f(C.b(A.c(new StringBuffer(), str2), (int)(B.i() * 10) ^ i));
    } 
  }
  
  public static String f() {
    return (F.b() <= 0) ? "" : null;
  }
  
  public static void g(Object paramObject) {
    if (c() <= 0)
      ((I)paramObject).b(); 
  }
  
  public static String h(short[] paramArrayOfshort, int paramInt1, int paramInt2, int paramInt3) {
    char[] arrayOfChar = new char[paramInt2];
    for (byte b = 0; b < paramInt2; b++)
      arrayOfChar[b] = (char)(char)(paramArrayOfshort[paramInt1 + b] ^ paramInt3); 
    return new String(arrayOfChar);
  }
}
