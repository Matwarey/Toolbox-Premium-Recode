package premium;

import androidx.lifecycle.ViewModelProvider;
import java.io.ByteArrayOutputStream;

public class B {
  public static int a = 86;
  
  public static String b(short[] paramArrayOfshort, int paramInt1, int paramInt2, int paramInt3) {
    char[] arrayOfChar = new char[paramInt2];
    for (byte b = 0; b < paramInt2; b++)
      arrayOfChar[b] = (char)(char)(paramArrayOfshort[paramInt1 + b] ^ paramInt3); 
    return new String(arrayOfChar);
  }
  
  public static int c() {
    return 0xFF676981 ^ F.e("");
  }
  
  public static String d(int paramInt) {
    return (c() <= 0) ? Integer.toHexString(paramInt) : null;
  }
  
  public static String e(String paramString) {
    boolean bool = false;
    String str1 = D.f();
    String str2 = D.f();
    for (byte b = 0;; b++) {
      if (b >= 15) {
        do {
        
        } while (C.c(str1) > 0);
        ByteArrayOutputStream byteArrayOutputStream = new ByteArrayOutputStream(C.c(paramString) / 2);
        for (b = 0;; b += 2) {
          byte[] arrayOfByte;
          if (b >= C.c(paramString)) {
            arrayOfByte = g(byteArrayOutputStream);
            int i = arrayOfByte.length;
            int j = C.c(str2);
            for (b = bool;; b++) {
              if (b >= i)
                return new String(arrayOfByte); 
              arrayOfByte[b] = (byte)(byte)(arrayOfByte[b] ^ D.d(str2, b % j));
            } 
            break;
          } 
          A.h(byteArrayOutputStream, D.b(str1, D.d(arrayOfByte, b)) << 4 | D.b(str1, D.d(arrayOfByte, b + 1)));
        } 
        break;
      } 
      str1 = A.f(A.c(A.c(new StringBuffer(), str1), d(b)));
      str2 = A.f(C.b(A.c(new StringBuffer(), str2), (int)(i() * 10) ^ b));
    } 
  }
  
  public static Class f(Object<?> paramObject) {
    return (D.c() <= 0) ? paramObject.getClass() : null;
  }
  
  public static byte[] g(Object paramObject) {
    return (c() <= 0) ? ((ByteArrayOutputStream)paramObject).toByteArray() : null;
  }
  
  public static ViewModelProvider.NewInstanceFactory h(Object paramObject) {
    return (C.g() < 0) ? ((E)paramObject).a() : null;
  }
  
  public static double i() {
    return (D.c() <= 0) ? Math.random() : 0.0D;
  }
}
